{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Water-Quality-Analyzer/app/upload/page.tsx"],"sourcesContent":["// pages/upload.tsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./upload.module.css\";\n\nconst UploadPage: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [result, setResult] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    try {\n      setLoading(true);\n      const response = await axios.post(\"/api/analyze\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setResult(response.data.result);\n    } catch (error) {\n      console.error(\"Error analyzing image:\", error);\n      alert(\"Failed to analyze the image.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Upload an Image for Analysis</h1>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileChange}\n          className={styles.fileInput}\n        />\n        <button type=\"submit\" className={styles.submitButton} disabled={loading}>\n          {loading ? \"Analyzing...\" : \"Upload & Analyze\"}\n        </button>\n      </form>\n      {result && <p className={styles.result}>Water Quality: {result}</p>}\n    </div>\n  );\n};\n\nexport default UploadPage;\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;AACnB;;;;;;AACA;;;;;AAGA,MAAM,aAAuB;IAC3B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,mBAAmB,CAAC;QACxB,IAAI,MAAM,MAAM,CAAC,KAAK,IAAI,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE;YAC/C,gBAAgB,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;QACvC;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,MAAM,cAAc;QAEpB,IAAI,CAAC,cAAc;YACjB,MAAM;YACN;QACF;QAEA,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,IAAI;YACF,WAAW;YACX,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,gBAAgB,UAAU;gBAC1D,SAAS;oBACP,gBAAgB;gBAClB;YACF;YACA,UAAU,SAAS,IAAI,CAAC,MAAM;QAChC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACR,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW,OAAO,SAAS;;0BAC9B,8OAAC;gBAAG,WAAW,OAAO,KAAK;0BAAE;;;;;;0BAC7B,8OAAC;gBAAK,WAAW,OAAO,IAAI;gBAAE,UAAU;;kCACtC,8OAAC;wBACC,MAAK;wBACL,QAAO;wBACP,UAAU;wBACV,WAAW,OAAO,SAAS;;;;;;kCAE7B,8OAAC;wBAAO,MAAK;wBAAS,WAAW,OAAO,YAAY;wBAAE,UAAU;kCAC7D,UAAU,iBAAiB;;;;;;;;;;;;YAG/B,wBAAU,8OAAC;gBAAE,WAAW,OAAO,MAAM;;oBAAE;oBAAgB;;;;;;;;;;;;;AAG9D;uCAEe"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}