{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Water-Quality-Analyzer/app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Water-Quality-Analyzer/app/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/app/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Water-Quality-Analyzer/app/map/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { MapPin, Loader2, ChevronDown } from 'lucide-react';\nimport dynamic from 'next/dynamic';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/app/components/ui/card';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue \n} from '@/components/ui/select';\nimport type { WaterQualityData, WaterQualityRecord, LocationCoordinates } from './types';\nimport type { LatLngTuple } from 'leaflet';\n\n// Dynamically import Leaflet components\nconst MapContainer = dynamic(\n  () => import('react-leaflet').then(mod => mod.MapContainer),\n  { ssr: false }\n);\n\nconst TileLayer = dynamic(\n  () => import('react-leaflet').then(mod => mod.TileLayer),\n  { ssr: false }\n);\n\nconst Marker = dynamic(\n  () => import('react-leaflet').then(mod => mod.Marker),\n  { ssr: false }\n);\n\nconst waterQualityData: WaterQualityRecord = {\n  'New York': { quality: 'Good', details: 'pH: 7.2, Turbidity: Low' },\n  'Los Angeles': { quality: 'Fair', details: 'pH: 6.8, Turbidity: Medium' },\n  'Chicago': { quality: 'Excellent', details: 'pH: 7.0, Turbidity: Very Low' },\n  'Houston': { quality: 'Poor', details: 'pH: 6.5, Turbidity: High' },\n};\n\nconst locations: LocationCoordinates = {\n  'New York': [40.7128, -74.0060],\n  'Los Angeles': [34.0522, -118.2437],\n  'Chicago': [41.8781, -87.6298],\n  'Houston': [29.7604, -95.3698],\n};\n\ninterface MapMarkerProps {\n  position: LatLngTuple;\n  onClick: () => void;\n}\n\nconst MapMarker: React.FC<MapMarkerProps> = ({ position, onClick }) => {\n  return (\n    <Marker \n      position={position} \n      eventHandlers={{ click: onClick }}\n    />\n  );\n};\n\ninterface MapComponentProps {\n  onLocationSelect: (location: string) => void;\n}\n\nconst MapComponent: React.FC<MapComponentProps> = ({ onLocationSelect }) => {\n  const [selectedLocation, setSelectedLocation] = useState<string | null>(null);\n\n  const handleMarkerClick = (location: string) => {\n    setSelectedLocation(location);\n    onLocationSelect(location);\n  };\n\n  return (\n    <div className=\"h-[400px] w-full rounded-lg overflow-hidden\">\n      <MapContainer\n        center={[39.8283, -98.5795]}\n        zoom={4}\n        className=\"h-full w-full\"\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {Object.entries(locations).map(([name, coords]) => (\n          <MapMarker\n            key={name}\n            position={coords}\n            onClick={() => handleMarkerClick(name)}\n          />\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default function WaterQualityMap() {\n  const [selectedLocation, setSelectedLocation] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [result, setResult] = useState<WaterQualityData | null>(null);\n\n  const handleLocationSelect = async (location: string) => {\n    setLoading(true);\n    setSelectedLocation(location);\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setResult(waterQualityData[location]);\n    setLoading(false);\n  };\n\n  const getQualityColor = (quality: string): string => {\n    switch (quality) {\n      case 'Excellent':\n        return 'text-green-600';\n      case 'Good':\n        return 'text-blue-600';\n      case 'Fair':\n        return 'text-yellow-600';\n      case 'Poor':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <Card className=\"max-w-4xl mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-center text-2xl font-bold\">\n            Water Quality Map Analysis\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <Select onValueChange={handleLocationSelect}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a location\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {Object.keys(locations).map((location) => (\n                    <SelectItem key={location} value={location}>\n                      {location}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              \n              <MapComponent onLocationSelect={handleLocationSelect} />\n              \n              <p className=\"text-sm text-gray-500 text-center\">\n                Click on a marker or select a location from the dropdown\n              </p>\n            </div>\n\n            <div className=\"bg-white rounded-lg p-6 border h-fit\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <Loader2 className=\"w-8 h-8 animate-spin text-blue-500\" />\n                </div>\n              ) : selectedLocation && result ? (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <MapPin className=\"w-5 h-5 text-blue-500\" />\n                    <h3 className=\"text-lg font-semibold\">{selectedLocation}</h3>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <p className=\"text-gray-600\">Water Quality:</p>\n                    <p className={`text-2xl font-bold ${getQualityColor(result.quality)}`}>\n                      {result.quality}\n                    </p>\n                  </div>\n                  \n                  <div className=\"pt-4 border-t\">\n                    <h4 className=\"font-medium mb-2\">Detailed Analysis:</h4>\n                    <p className=\"text-gray-600\">{result.details}</p>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"text-center text-gray-500\">\n                  <MapPin className=\"w-12 h-12 mx-auto mb-3 opacity-50\" />\n                  <p>Select a location to view water quality data</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}